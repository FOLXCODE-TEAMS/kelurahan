stages:
  - build
  - deploy

build-dev:
  stage: build
  image: node:16.15.0-alpine
  services:
    - name: node:16.15.0-alpine
      alias: node
      command: ['--tls=false']
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME == 'development'
      variables:
        DEPLOY_TAG: 'latest'
      when: manual
    - if: $CI_COMMIT_REF_NAME != 'development'
      when: never
  script:
    - npm install
    - npm run build-dev
  artifacts:
    paths:
      - dist/liszthoven-admin/
    expire_in: 1h

deploy-dev:
  only:
    - development
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: ['']
  when: on_success
  needs:
    - build-dev
  tags:
    - docker
  before_script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
  script:
    - aws --version
    - aws s3 cp --recursive dist/liszthoven-admin/ s3://$DEV_AWS_S3_BUCKET_NAME/ --acl public-read
    - aws cloudfront create-invalidation --distribution-id $DEV_AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
  artifacts:
    paths:
      - dist/liszthoven-admin/

build-live:
  stage: build
  image: node:16.15.0-alpine
  services:
    - name: node:16.15.0-alpine
      alias: node
      command: ['--tls=false']
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main'
      variables:
        DEPLOY_TAG: 'latest'
      when: manual
    - if: $CI_COMMIT_REF_NAME != 'main'
      when: never
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/liszthoven-admin/
    expire_in: 1h

deploy-live:
  only:
    - main
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: ['']
  when: on_success
  needs:
    - build-live
  tags:
    - docker
  before_script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
  script:
    - aws --version
    - aws s3 cp --recursive dist/liszthoven-admin/ s3://$AWS_S3_BUCKET_NAME/ --acl public-read
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
  artifacts:
    paths:
      - dist/liszthoven-admin/
